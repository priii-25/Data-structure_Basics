#include <stdio.h>
#include <stdlib.h>
struct Node
{
 int data;
 struct Node *next;
 struct Node *prev;
}*head=NULL,*last=NULL;
void create(int A[],int n)
{
    struct Node *last,*t;
    head=(struct Node*)malloc(sizeof(struct Node));
    head->prev=NULL;
    head->data=A[0];
    head->next=NULL;
    last=head;
    for(int i=1;i<n;i++)
    {
        t=(struct Node*)malloc(sizeof(struct Node));
        t->data=A[i];
        t->next=last->next;
        t->prev=last;
        last->next=t;
        last=t;
    }
}
void Display(struct Node *p)
{
 while(p!=NULL)
 {
 printf("%d ",p->data);
 p=p->next;
 }
}
 void insert(struct Node*p,int pos,int x)
 {
    struct Node *t;
    t=(struct Node*)malloc(sizeof(struct Node));
    t->data=x;
    if (pos==0)
    {
    t->prev=NULL;
    t->next=head;
    head->prev=t;
    head=t;
    }
    else
    {
    for(int i=0;i<pos-1;i++)
    {
        p=p->next;
    }
    t->next=p->next;
    t->prev=p;
    if(p->next)
    {
        p->next->prev=t;
    }
    p->next=t;
    }
 }
 void delete(struct Node *p,int pos)
 {
     p=head;
     if(pos==0)
     {
         head=head->next;
         int x=p->data;
         free (p);
         if (head)
         {
             head->prev=NULL;
         }
     }
     else
     {
     for(int i=0;i<pos;i++)
     {
         p=p->next;
     }
     p->prev->next=p->next;
     if(p->next)
     {
         p->next->prev=p->prev;
     }
     int x=p->data;
     free (p);
     }
 }
 void reverse(struct Node *p)
 {
     struct Node *temp;
     while(p!=NULL)
     {
         temp=p->next;
         p->next=p->prev;
         p->prev=temp;
         p=p->prev;
     if(p!=NULL && p->next==NULL)
     {
         head=p;
     }
     }
 }
int main()
{
    int A[]={10,20,30,40,50,60,70,80,90};
    create(A,9);
    //insert(head,3,35);
    //delete(head,8);
    Display(head);
    printf("\n");
    reverse(head);
    Display(head);
    return 0;
}

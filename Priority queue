//Rules: Data is stored in the order of highest priority to lowest priority and if the priority for two elements is same the then element entrered first gains more priority
#include <stdio.h>
#include <stdlib.h>
typedef struct node{
    int data;
    int priority;
    struct node *next;
}Node;
Node *newnode(int d,int p){
    Node*temp=(Node*)malloc(sizeof(Node));
    temp->data=d;
    temp->priority=p;
    temp->next=NULL;
    return temp;
}
int peek(Node**head){
    return (*head)->data;
}
void pop(Node**head){
Node*temp=*head;
(*head)=(*head)->next;
free(temp);
}
void push(Node**head,int d,int p){
Node*start=(*head);
Node*temp=newnode(d,p);
if((*head)->priority>p){
    temp->next=*head;
    (*head)=temp;
    }
    else{
    while(start->next!=NULL && start->next->priority<p){
        start=start->next;
    }
    temp->next=start->next;
    start->next=temp;
    }
}
int isEmpty(Node**head){
    return(*head)==NULL;
}
int main(){
Node*pq=newnode(7,1);
push(&pq,1,2);
push(&pq,3,3);
push(&pq,2,0);
push(&pq,56,4);
while(!isEmpty(&pq)){
    printf("%d \n",peek(&pq));
    pop(&pq);
}
    return 0;
}
